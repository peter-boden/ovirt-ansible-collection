---
name: Build
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # schedule# Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still
  # testing against latest version of ansible-test for each ansible-core
  # version:
  schedule:
    - cron: '0 6 * * *'

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.pull_request.number || github.sha
    }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: ovirt/checkout-action@main
      - name: Build the project
        run: ./build.sh build ovirt /tmp;cp -rf /tmp/ansible_collections/ovirt/ovirt/* .
      - name: Run ansible lint
        uses: ansible/ansible-lint@v25
        with:
          args: "-x 'key-order[task],no-free-form,schema[vars],yaml[octal-values],risky-shell-pipe,fqcn[keyword]' roles/*"
          requirements_file: "meta/requirements.yml"

  sanity:
    name: Sanity (â’¶${{ matrix.ansible }})
    needs:
      - lint
    strategy:
      matrix:
        ansible:
          - stable-2.14
          - stable-2.15
          - stable-2.16
          - stable-2.17
          - stable-2.18
          - devel

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: ovirt/checkout-action@main

      - name: Build the project
        run: ./build.sh build ovirt /tmp

      - name: Perform sanity testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          pull-request-change-detection: false
          test-deps:
            ansible.posix
          collection-src-directory: /tmp/ansible_collections/ovirt/ovirt

  build:
    name: Build for ${{ matrix.name }}
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    needs:
      - sanity
      - lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-9
            pip-command: pip3
            container-name: el9stream
    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-name }}
    steps:
      - name: Install python3 modules
        run: ${{ matrix.pip-command }} install pycodestyle pylint voluptuous yamllint rstcheck antsibull-changelog rich ansible-lint cryptography

      - name: Install ansible.posix
        run: ansible-galaxy collection install -c ansible.posix

      - name: Checkout
        uses: ovirt/checkout-action@main

      - name: Run build.sh
        run: .automation/build.sh

      - name: Upload artifacts
        uses: ovirt/upload-rpms-action@main
        with:
          directory: exported-artifacts

